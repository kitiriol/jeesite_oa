<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.oapms.dao.ProjectHelpDao">
    
	<sql id="projectHelpColumns">
		a.help_id AS "helpId",
		a.project_id AS "project.projectId",
		
		p.project_name AS "project.projectName",
		
		a.content AS "content",
		a.helper AS "helper.id",
		
		u1.name As "helper.name",
		
		a.help_by AS "helpBy.id",
		
		u2.name As "helpBy.name",
		
		a.status AS "status",
		a.help_time AS "helpTime",
		a.create_by AS "createBy.id",
		a.create_time AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_time AS "updateDate",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="projectHelpJoins">
		left join sys_user u1 on u1.id = a.helper
		left join sys_user u2 on u2.id = a.help_by
		left join pms_project p on p.project_id = a.project_id
	</sql>
	
	<!-- 分页查询某个项目的求助信息列表 -->
	<select id="findProjectHelpList" resultType="PmsProjectHelp" parameterType="PmsProjectHelp">
		SELECT 
			<include refid="projectHelpColumns"/>
		FROM pms_project_help a
			<include refid="projectHelpJoins"/>
		where a.del_flag = "0" 
			and a.project_id = #{project.projectId}
		<if test=" status != null and status != ''">
		    and a.status = #{status}
		</if>
		order by a.create_time desc
	</select>
	
	<!-- 通过求助id查找该条求助记录 -->
	<select id="getOneProjectHelp" resultType="PmsProjectHelp" parameterType="String">
		select 
			<include refid="projectHelpColumns"/>
		FROM pms_project_help a
			<include refid="projectHelpJoins"/>
		where a.help_id = #{id}
	</select>
	
	<!-- 通过项目id查找该条项目记录 -->
	<select id="getOnePmsProjectByProjectId" resultType="PmsProject" parameterType="String">
		select 
			project_id AS "projectId",
			project_name AS "projectName"
		from pms_Project 
		where project_id = #{id}
	</select>
	
	<!-- 插入一条项目求助记录 -->
	<insert id="addOneProjectHelp" parameterType="PmsProjectHelp">
		INSERT INTO pms_project_help(
			help_id,
			project_id,
			content,
			helper,
			help_by,
			status,
			help_time,
			create_by,
			create_time,
			update_by,
			update_time,
			del_flag
		) VALUES (
			#{helpId},
			#{project.projectId},
			#{content},
			#{helper.id},
			#{helpBy.id},
			#{status},
			#{helpTime},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	<!-- 将协助者插入到项目关系人表中（增加可以查看该项目的权限） -->
	<insert id="insertHelperToRelative">
		INSERT INTO pms_project_relativer(
			id,
			relative_type,
			employees_id,
			employees_type
		) VALUES 
		(
			#{Id},
			#{relativeType},
			#{employees.id},
			#{employeesType}
		)
	</insert>
	
	<!-- 更新一条项目求助记录 -->
	<update id="updateOneProjectHelp" parameterType="PmsProjectHelp">
		update pms_project_help set
			content = #{content},
			helper = #{helper.id},
			status = #{status},
			update_by = #{updateBy.id},
			update_time = #{updateDate}
		where help_id = #{helpId}
	</update>
	<!-- 修改项目求助的求助人时删除对应的关系人表中以前的协助者 -->
	<delete id="deleteHelperInRelative" parameterType="ProjectRelativer">
		delete from pms_project_relativer
		where id = #{Id} 
			and employees_id = #{employees.id}
			and employees_type = #{employeesType}
	</delete>
	<!-- 删除某条项目的某条求助 -->
	<update id="deleteOneProjectHelp" parameterType="String">
		UPDATE pms_project_help SET 	
			del_flag = "1"
		WHERE help_id = #{id}
	</update>
	<!-- 分页查询某个项目的费用信息 -->
	<select id="findProjectExpenseList" resultType="PmsProjectExpense"  parameterType="PmsProjectExpense">
		select 
			a.expense_id AS "expenseId",
			a.project_id AS "project.projectId",
			p.project_name AS "project.projectName",
			a.money AS "money",
			a.status AS "status",
			a.create_by AS "createBy.id",
			u.name AS "createBy.name",
			a.create_time AS "createDate",
			a.update_by AS "updateBy.id",
			a.update_time AS "updateDate",
			a.del_flag AS "delFlag"
		from pms_project_expense a
			left join sys_user u on u.id = a.create_by
			left join pms_project p on p.project_id = a.project_id
		where a.project_id = #{project.projectId}
		<if test=" status != null and status != ''">
		    and a.status = #{status}
		</if>
			and a.del_flag = "0"
	</select>
	
	<!-- 通过费用id获取某个费用的详情 -->
	<select id="getOneProjectExpense" resultType="PmsProjectExpense"  parameterType="String">
		select
			a.expense_id AS "expenseId",
			a.project_id AS "project.projectId",
			p.project_name AS "project.projectName",
			a.money AS "money",
			a.status AS "status",
			a.create_by AS "createBy.id",
			u.name AS "createBy.name",
			a.create_time AS "createDate",
			a.update_by AS "updateBy.id",
			a.update_time AS "updateDate",
			a.del_flag AS "delFlag"
		from pms_project_expense a
			left join sys_user u on u.id = a.create_by
			left join pms_project p on p.project_id = a.project_id
		where a.expense_id = #{id}
	</select>
	
	<!-- 修改项目费用 -->
	<update id="updateOneProjectExpense" parameterType="PmsProjectExpense">
		update pms_project_expense set 
			money = #{money},
			status = #{status},
			update_by = #{updateBy.id},
			update_time = #{updateDate}
		where expense_id = #{expenseId} 
	</update>
	
	<!-- 插入一条项目费用 -->
	<insert id="addOneProjectExpense" parameterType="PmsProjectExpense">
		INSERT INTO pms_project_expense(
			expense_id,
			project_id,
			money,
			status,
			create_by,
			create_time,
			update_by,
			update_time,
			del_flag
		) VALUES 
		(
			#{expenseId},
			#{project.projectId},
			#{money},
			#{status},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	<!-- 删除某条项目费用 -->
	<update id="deleteOneProjectExpense" parameterType="String">
		update pms_project_expense set 
			del_flag = "1"
		where expense_id = #{id}
	</update>
</mapper>
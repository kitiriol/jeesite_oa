<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thinkgem.jeesite.modules.customer.dao.CustomerInfoDao">

	<sql id="customerInfoColumns">
		a.id,
		a.customer_name as customerName,
		a.phone,
		a.company,
		a.position,
		a.examine,
		a.parent_id as parentId,
		a.create_by as createId	
	</sql>
	
	<select id="findList" resultType="CustomerInfo">
		SELECT 
			<include refid="customerInfoColumns"/>
		FROM pm_customer_information a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="createBy != null and createBy != ''">
				AND a.create_by = #{createId}
			</if>
			<if test="customerName != null and customerName != ''">
				AND a.customer_name = #{customerName}
			</if>
			
		</where>
	</select>
	
	<select id="getCustomerInfoList" resultType="CustomerInfo">
		SELECT 
			<include refid="customerInfoColumns"/>
		FROM pm_customer_information a
		where
			a.del_flag = '0'
	
	</select>
	
	<insert id="saveCustomerInfo">
		INSERT INTO pm_customer_information(
			id, 
			customer_name, 
			company, 
			position, 
			brithday, 
			hobby, 
			sex, 
			phone, 
			adress, 
			remarks,
			examine, 
			create_by, 
			create_date,
			update_by,
			update_date,
			del_flag,
			parent_id
		) VALUES (
			#{id}, 
			#{customerName}, 
			#{company}, 
			#{position}, 
			#{customerBrithday}, 
			#{hobby}, 
			#{sex},
			#{phone},
			#{adress},
			#{remarks},
			#{examine},
			#{createId}, 
			#{createDate}, 
			#{updateId}, 
			#{updateDate}, 
			#{delFlag},
			#{parentId}
		)
	</insert>
	
	<update id="updateCustomerInfo">
		UPDATE pm_customer_information 
		SET 
			customer_name = #{customerName},
			company = #{company},
			position = #{position},
			brithday = #{customerBrithday},
			hobby = #{hobby},
			sex = #{sex},
			phone = #{phone},
			adress = #{adress},
			remarks = #{remarks},
			examine = #{examine},
			reject = #{reject},
			create_by = #{createId}, 
			create_date = #{createDate},
			update_by = #{updateId},
			update_date = #{updateDate}
		WHERE 
			del_flag = 0
			and
			id = #{id}
	</update>
		
	<insert id="saveResume">
		INSERT INTO pm_resume(
			id, 
			company,
			customer_id, 
			position,
			position_time, 
			create_by, 
			crearte_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{customerCompany}, 
			#{customerId}, 
			#{customerPosition}, 
			#{positionTime}, 
			#{createId}, 
			#{createDate}, 
			#{updateId}, 
			#{updateDate}, 
			#{delFlag}
		)
	</insert>
	
	<update id="updateResume">
		UPDATE pm_resume 
		SET  
			company = #{customerCompany},
			customer_id = #{customerId}, 
			position = #{customerPosition},
			position_time = #{positionTime}, 
			create_by = #{createId}, 
			crearte_date = #{createDate},
			update_by = #{updateId},
			update_date = #{updateDate}
		WHERE
			del_flag = 0
			and
			id = #{id}
	</update>
	
	<select id="findResumeIdsByCusId" resultType="Resume">
		SELECT 
			id
		FROM
			pm_resume
		WHERE
			del_flag = 0
			and
			customer_id = #{customerId}
	</select>
	
	<insert id="saveFamily">
		INSERT INTO pm_family(
			id, 
			customer_id, 
			user_name,
			beithday,
			relationship, 
			create_by, 
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id},
			#{customerId}, 
			#{familyName}, 
			#{familyBrithday},
			#{relationship}, 
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{delFlag}
		)
	</insert>
	
	<update id="updateFamily">
		UPDATE pm_family
		SET  
			customer_id = #{customerId},
			user_name = #{familyName}, 
			beithday = #{familyBrithday},
			relationship = #{relationship}, 
			create_by = #{createId}, 
			create_date = #{createDate},
			update_by = #{updateId},
			update_date = #{updateDate}
		WHERE
			del_flag = 0
			and
			id = #{id}
	</update>
	
	<select id="findFamilyIdsByCusId" resultType="Family">
		SELECT 
			id
		FROM
			pm_family
		WHERE
			del_flag = 0
			and
			customer_id = #{customerId}
	</select>
	
	<select id="findCustomerInfoById" resultType="customerInfo">
		SELECT
			id,
			customer_name as customerName,
			company,
			position,
			brithday as customerBrithday,
			hobby,
			sex,
			phone,
			adress,
			reject,
			parent_id as parentId,
			remarks
		FROM
			pm_customer_information
		WHERE
			del_flag = 0
			and
			id = #{customerId}
	</select>
	
	<select id="findResumeListById" resultType="Resume">
		SELECT 
			company as customerCompany,
			position as customerPosition,
			position_time as positionTime
		FROM
			pm_resume
		WHERE
			del_flag = 0
			and
			customer_id = #{customerId}
	</select>
	
	
	<select id="findFamilyListById" resultType="Family">
		SELECT 
			user_name as familyName,
			beithday as familyBrithday,
			relationship
		FROM
			pm_family
		WHERE
			del_flag = 0
			and
			customer_id = #{customerId}
	</select>
	
	
	<insert id="saveCustomerAnalysis">
		INSERT INTO pm_customer_analysis(
			id, 
			customer_id, 
			aly_person, 
			aly_content, 
			aly_time,  
			create_by, 
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id}, 
			#{customerId}, 
			#{alyPerson}, 
			#{alyContent}, 
			#{alyTime}, 
			#{createId}, 
			#{createDate}, 
			#{updateId}, 
			#{updateDate}, 
			#{delFlag}
		)
	</insert>
	
	<update id="updateCustomerAnalysis">
		UPDATE pm_customer_analysis
		SET  
			customer_id = #{customerId},
			aly_person = #{alyPerson}, 
			aly_content = #{alyContent},
			aly_time = #{alyTime}, 
			create_by = #{createId}, 
			create_date = #{createDate},
			update_by = #{updateId},
			update_date = #{updateDate}
		WHERE
			del_flag = 0
			and
			id = #{id}
	
	</update>
	
	
	<select id="findCusAnalysisIdsByCusId" resultType="CustomerAnalysis">
		SELECT 
			id
		FROM
			pm_customer_analysis
		WHERE
			del_flag = 0
			and
			customer_id = #{customerId}
	</select>
	
	
	<select id="findCusAnalysisByCustomerId" resultType="CustomerAnalysis">
		SELECT 
			aly_person as alyPerson,
			aly_content as alyContent,
			aly_time as alyTime
		FROM
			pm_customer_analysis
		WHERE
			customer_id = #{customerId}
	</select>
	
	
	
	<select id="findCustomerGroupById" resultType="String">
		SELECT 
			id
		FROM
			pm_customer_information
		WHERE
			create_By = #{userId}
	</select>
	
	
	<update id="deleteResumeByCustomerId">
		UPDATE pm_resume SET 
			del_flag = '1'
		WHERE customer_id = #{customerId}
	</update>
	
	<update id="deleteFamilyByCustomerId">
		UPDATE pm_family SET 
			del_flag = '1'
		WHERE customer_id = #{customerId}
	</update>
	
	<update id="deleteCustomerInfo">
		UPDATE pm_customer_information SET 
			del_flag = '1'
		WHERE id = #{customerId}
	</update>
	
	
	<select id="findCreateByDate" resultType="CustomerInfo">
		SELECT
			create_by as createId,
			create_date as createDate
		FROM
			pm_customer_information
		WHERE 
			del_flag = 0
			and
			id = #{customerId}
	</select>
	
	<select id="getCustomerInfoZtreeList" resultType="CustomerInfo">
		SELECT
			a.id AS nodeCode ,a.parent_id AS ParentId ,a.name AS nodeName
		FROM
			pm_customer_ztree a
		WHERE a.del_flag = '0'
		UNION ALL
		SELECT
			b.id AS nodeCode ,b.parent_id AS ParentId ,b.customer_name AS nodeName
		FROM
			pm_customer_information b
		WHERE b.del_flag = '0'

	</select>
	
	<select id="getMyCustomerInfoZtreeList" resultType="CustomerInfo">
		SELECT
			a.id AS nodeCode ,a.parent_id AS ParentId ,a.name AS nodeName
		FROM
			pm_customer_ztree a
		WHERE a.del_flag = '0'
		UNION ALL
		SELECT
			b.id AS nodeCode ,b.parent_id AS ParentId ,b.customer_name AS nodeName
		FROM
			pm_customer_information b
		WHERE b.del_flag = '0' and b.create_by = #{id}
	</select>
	
	<select id="findPageList" resultType="CustomerInfo">
		SELECT
			<include refid="customerInfoColumns"/>
		FROM
			pm_customer_information a
		WHERE a.del_flag = '0'
		AND a.parent_id = #{parentCode}
	</select>
	
	<select id="getZtreeInfoList" resultType="CustomerInfo">
		SELECT
			id AS parentId,
			NAME AS nodeName
		FROM
			pm_customer_ztree
		WHERE
			del_flag = '0'
		AND id != '1'
	</select>
	
	<update id="saveexamine">
		UPDATE pm_customer_information 
		SET 
			examine = #{examine},
			reject = #{reject}
		WHERE 
			del_flag = 0
			and
			id = #{id}
	</update>
	
</mapper>